spring.application.name=spring-cloud-oauth2-server
server.port=8082

management.endpoints.jmx.exposure.include=*
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
# spring cloud access&secret config
# 可以访问如下地址查看: https://usercenter.console.aliyun.com/#/manage/ak
alibaba.cloud.access-key=****
alibaba.cloud.secret-key=****

# 注册授权服务器信息
auth-server=http://localhost:8081
spring.security.oauth2.client.registration.auth-server.client-id=t0
spring.security.oauth2.client.registration.auth-server.client-secret=wqsqzj
spring.security.oauth2.client.registration.auth-server.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.auth-server.redirect-uri=http://localhost:8082/test

spring.security.oauth2.client.provider.auth-server.authorization-uri=${auth-server}/oauth/authorize
spring.security.oauth2.client.provider.auth-server.token-uri=${auth-server}/oauth/token
spring.security.oauth2.client.provider.auth-server.user-info-uri=${user-manager-server}/userInfo

#OAUTH2 实现sso的关键就在于resource owner维持与授权服务器的session，， 所以登录应该是/oauth/authorize 这个接口热不是具体的登录页面，，好像也可以，不可以，，肯定会渲染登录页页面
# 这个应该配置的是什么呢？？ 应该配置的是自己的就是可以使用oauth2Client的地址，必须要让这个请求能够存入内存中, 下面这个应该是正解
#security.oauth2.sso.login-path=http://localhost:8081/oauth/authorize?client_id=t0&response_type=code&redirect_uri=http://localhost:8082/test&state=test123456
security.oauth2.sso.login-path=/login/auth-server

project.loginPath=/login

