spring.application.name=spring-cloud-oauth2-server
server.port=8082

management.endpoints.jmx.exposure.include=*
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
# spring cloud access&secret config
# 可以访问如下地址查看: https://usercenter.console.aliyun.com/#/manage/ak
alibaba.cloud.access-key=****
alibaba.cloud.secret-key=****

# 注册授权服务器信息
spring.security.oauth2.client.registration.qq.client-id=t0
spring.security.oauth2.client.registration.qq.client-secret=wqsqzj
spring.security.oauth2.client.registration.qq.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.qq.redirect-uri=placeholder

spring.security.oauth2.client.provider.qq.authorization-uri=${auth-server}/oauth/authorize
spring.security.oauth2.client.provider.qq.token-uri=${auth-server}/oauth/token
spring.security.oauth2.client.provider.qq.user-info-uri=${user-manager-server}/userInfo

#OAUTH2 实现sso的关键就在于resource owner维持与授权服务器的session，， 所以登录应该是/oauth/authorize 这个接口热不是具体的登录页面，，好像也可以，不可以，，肯定会渲染登录页页面
security.oauth2.sso.login-path=http://localhost:8081/oauth/authorize?client_id=t0&response_type=code&redirect_uri=http://localhost:8082/

